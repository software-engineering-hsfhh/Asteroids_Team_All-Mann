Index: asteroids.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\nAsteroid Smasher\r\n\r\nShoot space rocks in this demo program created with\r\nPython and the Arcade library.\r\n\r\nArtwork from http://kenney.nl\r\ntest \r\n\r\nIf Python and Arcade are installed, this example can be run from the command line with:\r\npython -m arcade.examples.asteroid_smasher\r\n\"\"\"\r\nimport random\r\nimport math\r\nimport arcade\r\nimport os\r\n\r\nfrom typing import cast\r\n\r\nimport self as self\r\n\r\nSTARTING_ASTEROID_COUNT = 3\r\nSCALE = 0.5\r\nOFFSCREEN_SPACE = 300\r\nSCREEN_WIDTH = 1440\r\nSCREEN_HEIGHT = 800\r\nSCREEN_TITLE = \"Asteroid Smasher\"\r\nLEFT_LIMIT = -OFFSCREEN_SPACE\r\nRIGHT_LIMIT = SCREEN_WIDTH + OFFSCREEN_SPACE\r\nBOTTOM_LIMIT = -OFFSCREEN_SPACE\r\nTOP_LIMIT = SCREEN_HEIGHT + OFFSCREEN_SPACE\r\n\r\n\r\nclass TurningSprite(arcade.Sprite):\r\n    \"\"\" Sprite that sets its angle to the direction it is traveling in. \"\"\"\r\n\r\n    def update(self):\r\n        \"\"\" Move the sprite \"\"\"\r\n        super().update()\r\n        self.angle = math.degrees(math.atan2(self.change_y, self.change_x))\r\n\r\n\r\nclass ShipSprite(arcade.Sprite):\r\n    \"\"\"\r\n    Sprite that represents our space ship.\r\n\r\n    Derives from arcade.Sprite.\r\n    \"\"\"\r\n\r\n    def __init__(self, filename, scale):\r\n        \"\"\" Set up the space ship. \"\"\"\r\n\r\n        # Call the parent Sprite constructor\r\n        super().__init__(filename, scale)\r\n\r\n        # Info on where we are going.\r\n        # Angle comes in automatically from the parent class.\r\n        self.thrust = 0\r\n        self.speed = 0\r\n        self.max_speed = 4\r\n        self.drag = 0.05\r\n        self.respawning = 0\r\n\r\n        # Mark that we are respawning.\r\n        self.respawn()\r\n\r\n    def respawn(self):\r\n        \"\"\"\r\n        Called when we die and need to make a new ship.\r\n        'respawning' is an invulnerability timer.\r\n        \"\"\"\r\n        # If we are in the middle of respawning, this is non-zero.\r\n        self.respawning = 1\r\n        self.center_x = SCREEN_WIDTH / 2\r\n        self.center_y = SCREEN_HEIGHT / 2\r\n        self.angle = 0\r\n\r\n    def update(self):\r\n        \"\"\"\r\n        Update our position and other particulars.\r\n        \"\"\"\r\n        if self.respawning:\r\n            self.respawning += 1\r\n            self.alpha = self.respawning\r\n            if self.respawning > 250:\r\n                self.respawning = 0\r\n                self.alpha = 255\r\n        if self.speed > 0:\r\n            self.speed -= self.drag\r\n            if self.speed < 0:\r\n                self.speed = 0\r\n\r\n        if self.speed < 0:\r\n            self.speed += self.drag\r\n            if self.speed > 0:\r\n                self.speed = 0\r\n\r\n        self.speed += self.thrust\r\n        if self.speed > self.max_speed:\r\n            self.speed = self.max_speed\r\n        if self.speed < -self.max_speed:\r\n            self.speed = -self.max_speed\r\n\r\n        self.change_x = -math.sin(math.radians(self.angle)) * self.speed\r\n        self.change_y = math.cos(math.radians(self.angle)) * self.speed\r\n\r\n        self.center_x += self.change_x\r\n        self.center_y += self.change_y\r\n\r\n        # If the ship goes off-screen, move it to the other side of the window\r\n        if self.right < 0:\r\n            self.left = SCREEN_WIDTH\r\n\r\n        if self.left > SCREEN_WIDTH:\r\n            self.right = 0\r\n\r\n        if self.bottom < 0:\r\n            self.top = SCREEN_HEIGHT\r\n\r\n        if self.top > SCREEN_HEIGHT:\r\n            self.bottom = 0\r\n\r\n        \"\"\" Call the parent class. \"\"\"\r\n        super().update()\r\n\r\n\r\nclass AsteroidSprite(arcade.Sprite):\r\n    \"\"\" Sprite that represents an asteroid. \"\"\"\r\n\r\n    def __init__(self, image_file_name, scale):\r\n        super().__init__(image_file_name, scale=scale)\r\n        self.size = 0\r\n\r\n    def update(self):\r\n        \"\"\" Move the asteroid around. \"\"\"\r\n        super().update()\r\n        if self.center_x < LEFT_LIMIT:\r\n            self.center_x = RIGHT_LIMIT\r\n        if self.center_x > RIGHT_LIMIT:\r\n            self.center_x = LEFT_LIMIT\r\n        if self.center_y > TOP_LIMIT:\r\n            self.center_y = BOTTOM_LIMIT\r\n        if self.center_y < BOTTOM_LIMIT:\r\n            self.center_y = TOP_LIMIT\r\n\r\n\r\nclass Star:\r\n\r\n    def __init__(self, position_x, position_y, change_x, change_y, radius, color):\r\n        self.position_x = position_x\r\n        self.position_y = position_y\r\n        self.change_x = change_x\r\n        self.change_y = change_y\r\n        self.radius = radius\r\n        self.color = color\r\n        self.start_position = position_x, position_y\r\n\r\n    def draw(self):\r\n        # Draw the star with the instance variables we have\r\n        arcade.draw_circle_filled(self.position_x, self.position_y, self.radius, self.color)\r\n\r\n    def reset_pos(self):\r\n\r\n        # Reset the coin to a random spot above the screen\r\n        self.position_y = random.randrange(SCREEN_HEIGHT + 20,\r\n                                         SCREEN_HEIGHT + 100)\r\n        self.position_x = random.randrange(SCREEN_WIDTH)\r\n\r\n    def update(self):\r\n\r\n        # Move the stars\r\n        self.position_y -= 1\r\n        self.position_x -= 0\r\n\r\n        # See if the star has fallen off the bottom of the screen.\r\n        # If so, reset it.\r\n        if self.position_y < 0:\r\n            self.reset_pos()\r\n\r\n        if self.position_x < 0:\r\n            self.reset_pos()\r\n\r\n\r\nclass MyGame(arcade.Window):\r\n    \"\"\" Main application class. \"\"\"\r\n\r\n    def __init__(self):\r\n        super().__init__(SCREEN_WIDTH, SCREEN_HEIGHT, SCREEN_TITLE)\r\n        arcade.set_background_color(arcade.csscolor.BLACK)\r\n\r\n        # Set the working directory (where we expect to find files) to the same\r\n        # directory this .py file is in. You can leave this out of your own\r\n        # code, but it is needed to easily run the examples using \"python -m\"\r\n        # as mentioned at the top of this program.\r\n        file_path = os.path.dirname(os.path.abspath(__file__))\r\n        os.chdir(file_path)\r\n\r\n        self.star_list = []\r\n\r\n        star = Star(720, 400, -3, -2, 3, arcade.color.CELESTIAL_BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 3, 2, 2, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, -3, 1, 1, arcade.color.BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 1, -3, 3, arcade.color.CELESTIAL_BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 1, 3, 2, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 3, 1, 1, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, -3, 2, 3, arcade.color.BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 3, -2, 2, arcade.color.CELESTIAL_BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, -3, -3, 3, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 3, 3, 2, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, -3, 0, 1, arcade.color.BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 0, -3, 3, arcade.color.CELESTIAL_BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 0, 3, 2, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 3, 0, 1, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, -3, 3, 3, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 3, -3, 2, arcade.color.CELESTIAL_BLUE)\r\n        self.star_list.append(star)\r\n\r\n        # slower moving stars\r\n\r\n        star = Star(720, 400, -1, -1, 3, arcade.color.BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 1, 1, 2, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, -1, 0, 1, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 0, -1, 3, arcade.color.CELESTIAL_BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 0, 1, 2, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 1, 0, 1, arcade.color.BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, -1, 1, 3, arcade.color.CELESTIAL_BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 1, -1, 2, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, -1, -2, 3, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 1, 2, 2, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, -1, 2, 1, arcade.color.CELESTIAL_BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 2, -1, 3, arcade.color.BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 2, 1, 2, arcade.color.CELESTIAL_BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, 1, -2, 1, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, -2, 1, 3, arcade.color.BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(720, 400, -2, -1, 2, arcade.color.CELESTIAL_BLUE)\r\n        self.star_list.append(star)\r\n\r\n        # stars not starting in the center\r\n        star = Star(500, 350, -3, -2, 3, arcade.color.BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(400, 310, 3, 2, 2, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(350, 260, -3, 1, 1, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(200, 230, 1, -3, 3, arcade.color.CELESTIAL_BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(600, 470, 1, 3, 2, arcade.color.BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(510, 540, 3, 1, 1, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(370, 600, -3, 2, 3, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(200, 690, 3, -2, 2, arcade.color.CELESTIAL_BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(750, 380, -3, -3, 3, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(800, 310, 3, 3, 2, arcade.color.BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(900, 250, -3, 0, 1, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(1050, 150, 0, -3, 3, arcade.color.CELESTIAL_BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(1200, 620, 0, 3, 2, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(1340, 680, 3, 0, 1, arcade.color.BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(1400, 710, -3, 3, 3, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(1410, 750, 3, -3, 2, arcade.color.CELESTIAL_BLUE)\r\n        self.star_list.append(star)\r\n\r\n        # slower moving stars\r\n\r\n        star = Star(800, 450, -1, -1, 3, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(990, 600, 1, 1, 2, arcade.color.CELESTIAL_BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(1100, 680, -1, 0, 1, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(1250, 750, 0, -1, 3, arcade.color.BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(850, 370, 0, 1, 2, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(970, 280, 1, 0, 1, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(1170, 170, -1, 1, 3, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(1350, 60, 1, -1, 2, arcade.color.BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(600, 350, -1, -2, 3, arcade.color.CELESTIAL_BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(540, 210, 1, 2, 2, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(500, 180, -1, 2, 1, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(410, 100, 2, -1, 3, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(600, 470, 2, 1, 2, arcade.color.CELESTIAL_BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(540, 610, 1, -2, 1, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(410, 690, -2, 1, 3, arcade.color.BLUE)\r\n        self.star_list.append(star)\r\n\r\n        star = Star(270, 730, -2, -1, 2, arcade.color.WHITE)\r\n        self.star_list.append(star)\r\n\r\n        self.frame_count = 0\r\n\r\n        self.game_over = False\r\n\r\n        # Sprite lists\r\n        self.player_sprite_list = arcade.SpriteList()\r\n        self.asteroid_list = arcade.SpriteList()\r\n        self.bullet_list = arcade.SpriteList()\r\n\r\n        # Set up the player\r\n        self.score = 0\r\n        self.player_sprite = None\r\n        self.lives = 0\r\n\r\n        # Sounds\r\n        # TODO: load sounds\r\n\r\n    def start_new_game(self):\r\n        \"\"\" Set up the game and initialize the variables. \"\"\"\r\n\r\n        self.frame_count = 0\r\n        self.game_over = False\r\n\r\n        # Sprite lists\r\n        self.player_sprite_list = arcade.SpriteList()\r\n        self.asteroid_list = arcade.SpriteList()\r\n        self.bullet_list = arcade.SpriteList()\r\n\r\n        # Set up the player\r\n        self.score = 0\r\n        self.player_sprite = ShipSprite(\":resources:images/space_shooter/playerShip1_orange.png\", SCALE)\r\n        self.player_sprite_list.append(self.player_sprite)\r\n        self.lives = 0\r\n\r\n        # ToDo: Set up the little icons that represent the player lives.\r\n\r\n        # Make the asteroids\r\n        image_list = (\":resources:images/space_shooter/meteorGrey_big1.png\",\r\n                      \":resources:images/space_shooter/meteorGrey_big2.png\",\r\n                      \":resources:images/space_shooter/meteorGrey_big3.png\",\r\n                      \":resources:images/space_shooter/meteorGrey_big4.png\")\r\n        for i in range(STARTING_ASTEROID_COUNT):\r\n            image_no = random.randrange(4)\r\n            enemy_sprite = AsteroidSprite(image_list[image_no], SCALE)\r\n            enemy_sprite.guid = \"Asteroid\"\r\n\r\n            enemy_sprite.center_y = random.randrange(BOTTOM_LIMIT, TOP_LIMIT)\r\n            enemy_sprite.center_x = random.randrange(LEFT_LIMIT, RIGHT_LIMIT)\r\n\r\n            enemy_sprite.change_x = random.random() * 2 - 1\r\n            enemy_sprite.change_y = random.random() * 2 - 1\r\n\r\n            enemy_sprite.change_angle = (random.random() - 0.5) * 2\r\n            enemy_sprite.size = 4\r\n            self.asteroid_list.append(enemy_sprite)\r\n\r\n    def on_draw(self):\r\n        \"\"\"\r\n        Render the screen.\r\n        \"\"\"\r\n\r\n        # Change the background.\r\n        arcade.set_background_color(arcade.csscolor.BLACK)\r\n\r\n        # This command has to happen before we start drawing\r\n        arcade.start_render()\r\n\r\n        for star in self.star_list:\r\n            star.draw()\r\n\r\n        # Draw all the sprites.\r\n        self.asteroid_list.draw()\r\n        self.bullet_list.draw()\r\n        self.player_sprite_list.draw()\r\n\r\n        # Put the text on the screen.\r\n        output = f\"Score: {self.score}\"\r\n        arcade.draw_text(output, 10, 70, arcade.color.RED, 13)\r\n\r\n        output = f\"Asteroid Count: {len(self.asteroid_list)}\"\r\n        arcade.draw_text(output, 10, 50, arcade.color.RED, 13)\r\n\r\n    def on_key_press(self, symbol, modifiers):\r\n        \"\"\" Called whenever a key is pressed. \"\"\"\r\n        if not self.player_sprite.respawning and symbol == arcade.key.SPACE:\r\n            # TODO: # Shoot if the player hit the space bar and we aren't respawning.\r\n            pass\r\n\r\n        if symbol == arcade.key.LEFT:\r\n            self.player_sprite.change_angle = 3\r\n        elif symbol == arcade.key.RIGHT:\r\n            self.player_sprite.change_angle = -3\r\n        elif symbol == arcade.key.UP:\r\n            self.player_sprite.thrust = 0.15\r\n        elif symbol == arcade.key.DOWN:\r\n            self.player_sprite.thrust = -.2\r\n\r\n    def on_key_release(self, symbol, modifiers):\r\n        \"\"\" Called whenever a key is released. \"\"\"\r\n        if symbol == arcade.key.LEFT:\r\n            self.player_sprite.change_angle = 0\r\n        elif symbol == arcade.key.RIGHT:\r\n            self.player_sprite.change_angle = 0\r\n        elif symbol == arcade.key.UP:\r\n            self.player_sprite.thrust = 0\r\n        elif symbol == arcade.key.DOWN:\r\n            self.player_sprite.thrust = 0\r\n\r\n    def split_asteroid(self, asteroid: AsteroidSprite):\r\n        \"\"\" Split an asteroid into chunks. \"\"\"\r\n        x = asteroid.center_x\r\n        y = asteroid.center_y\r\n        self.score += 1\r\n\r\n        if asteroid.size == 4:\r\n            for i in range(3):\r\n                image_no = random.randrange(2)\r\n                image_list = [\":resources:images/space_shooter/meteorGrey_med1.png\",\r\n                              \":resources:images/space_shooter/meteorGrey_med2.png\"]\r\n\r\n                enemy_sprite = AsteroidSprite(image_list[image_no],\r\n                                              SCALE * 1.5)\r\n\r\n                enemy_sprite.center_y = y\r\n                enemy_sprite.center_x = x\r\n\r\n                enemy_sprite.change_x = random.random() * 2.5 - 1.25\r\n                enemy_sprite.change_y = random.random() * 2.5 - 1.25\r\n\r\n                enemy_sprite.change_angle = (random.random() - 0.5) * 2\r\n                enemy_sprite.size = 3\r\n\r\n                self.asteroid_list.append(enemy_sprite)\r\n\r\n        elif asteroid.size == 3:\r\n            for i in range(3):\r\n                image_no = random.randrange(2)\r\n                image_list = [\":resources:images/space_shooter/meteorGrey_small1.png\",\r\n                              \":resources:images/space_shooter/meteorGrey_small2.png\"]\r\n\r\n                enemy_sprite = AsteroidSprite(image_list[image_no],\r\n                                              SCALE * 1.5)\r\n\r\n                enemy_sprite.center_y = y\r\n                enemy_sprite.center_x = x\r\n\r\n                enemy_sprite.change_x = random.random() * 3 - 1.5\r\n                enemy_sprite.change_y = random.random() * 3 - 1.5\r\n\r\n                enemy_sprite.change_angle = (random.random() - 0.5) * 2\r\n                enemy_sprite.size = 2\r\n\r\n                self.asteroid_list.append(enemy_sprite)\r\n\r\n        elif asteroid.size == 2:\r\n            for i in range(3):\r\n                image_no = random.randrange(2)\r\n                image_list = [\":resources:images/space_shooter/meteorGrey_tiny1.png\",\r\n                              \":resources:images/space_shooter/meteorGrey_tiny2.png\"]\r\n\r\n                enemy_sprite = AsteroidSprite(image_list[image_no],\r\n                                              SCALE * 1.5)\r\n\r\n                enemy_sprite.center_y = y\r\n                enemy_sprite.center_x = x\r\n\r\n                enemy_sprite.change_x = random.random() * 3.5 - 1.75\r\n                enemy_sprite.change_y = random.random() * 3.5 - 1.75\r\n\r\n                enemy_sprite.change_angle = (random.random() - 0.5) * 2\r\n                enemy_sprite.size = 1\r\n\r\n                self.asteroid_list.append(enemy_sprite)\r\n\r\n        elif asteroid.size == 1:\r\n            pass\r\n\r\n    def on_update(self, x):\r\n        \"\"\" Move everything \"\"\"\r\n\r\n        for star in self.star_list:\r\n            star.update()\r\n\r\n        self.frame_count += 1\r\n\r\n        if not self.game_over:\r\n            self.asteroid_list.update()\r\n            self.player_sprite_list.update()\r\n\r\n            if not self.player_sprite.respawning:\r\n                asteroids = arcade.check_for_collision_with_list(self.player_sprite, self.asteroid_list)\r\n                if len(asteroids) > 0:\r\n                    if self.lives > 0:\r\n                        self.lives -= 1\r\n                        self.player_sprite.respawn()\r\n                        self.split_asteroid(cast(AsteroidSprite, asteroids[0]))\r\n                        asteroids[0].remove_from_sprite_lists()\r\n                        print(\"Crash\")\r\n                    else:\r\n                        self.game_over = True\r\n                        print(\"Game over\")\r\n\r\n\r\ndef main():\r\n    \"\"\" Start the game \"\"\"\r\n    window = MyGame()\r\n    window.start_new_game()\r\n    arcade.run()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- asteroids.py	(revision ea51523c99b25116e03dd9ca55a9397e695a4c79)
+++ asteroids.py	(date 1603908971789)
@@ -163,7 +163,7 @@
 
         # Reset the coin to a random spot above the screen
         self.position_y = random.randrange(SCREEN_HEIGHT + 20,
-                                         SCREEN_HEIGHT + 100)
+                                           SCREEN_HEIGHT + 100)
         self.position_x = random.randrange(SCREEN_WIDTH)
 
     def update(self):
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"BranchesTreeState\">\n    <expand>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n    </expand>\n    <select>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"BRANCH:origin/Development\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n    </select>\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"e476e17d-6503-4333-9292-61f9c066748e\" name=\"Default Changelist\" comment=\"nichts\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"Backgrounkmusic\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectId\" id=\"1j6gaSKe1VfrpXBvgIgqzzv5Y9A\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"Git.Branch.Popup.ShowAllRemotes\" value=\"true\" />\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\" />\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"f8db3b91-4f0f-4122-8675-d8e1332548c4\" name=\"Default Changelist\" comment=\"\" />\n      <created>1603130019276</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1603130019276</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Bla Ba\">\n      <created>1603130398579</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1603130398579</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Lea hinzugefügt\">\n      <created>1603130590550</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1603130590550</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Lea hinzugefügt\">\n      <created>1603131292438</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1603131292438</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"respawn timer\">\n      <created>1603458393592</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1603458393593</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Merge Hintergrund\">\n      <created>1603899697890</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1603899697890</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"6\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"Development\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Bla Ba\" />\n    <MESSAGE value=\"Lea hinzugefügt\" />\n    <MESSAGE value=\"respawn timer\" />\n    <MESSAGE value=\"Merge Hintergrund\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Merge Hintergrund\" />\n  </component>\n  <component name=\"WindowStateProjectService\">\n    <state x=\"37\" y=\"83\" key=\"MergeDialog\" timestamp=\"1603899586544\">\n      <screen x=\"0\" y=\"0\" width=\"1440\" height=\"900\" />\n    </state>\n    <state x=\"37\" y=\"83\" key=\"MergeDialog/0.0.1440.900@0.0.1440.900\" timestamp=\"1603899586544\" />\n    <state x=\"37\" y=\"99\" key=\"MergeDialog/0.23.1440.820@0.23.1440.820\" timestamp=\"1603132330993\" />\n    <state x=\"358\" y=\"218\" key=\"MultipleFileMergeDialog\" timestamp=\"1603899632047\">\n      <screen x=\"0\" y=\"0\" width=\"1440\" height=\"900\" />\n    </state>\n    <state x=\"358\" y=\"218\" key=\"MultipleFileMergeDialog/0.0.1440.900@0.0.1440.900\" timestamp=\"1603899632047\" />\n    <state x=\"221\" y=\"89\" key=\"SettingsEditor\" timestamp=\"1603131770579\">\n      <screen x=\"0\" y=\"0\" width=\"1440\" height=\"900\" />\n    </state>\n    <state x=\"221\" y=\"89\" key=\"SettingsEditor/0.0.1440.900@0.0.1440.900\" timestamp=\"1603131770579\" />\n    <state x=\"320\" y=\"190\" key=\"Vcs.Push.Dialog.v2\" timestamp=\"1603901015187\">\n      <screen x=\"0\" y=\"0\" width=\"1440\" height=\"900\" />\n    </state>\n    <state x=\"320\" y=\"190\" key=\"Vcs.Push.Dialog.v2/0.0.1440.900@0.0.1440.900\" timestamp=\"1603901015187\" />\n    <state x=\"320\" y=\"196\" key=\"Vcs.Push.Dialog.v2/0.23.1440.820@0.23.1440.820\" timestamp=\"1603453584787\" />\n    <state x=\"518\" y=\"371\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2\" timestamp=\"1603458901250\">\n      <screen x=\"0\" y=\"0\" width=\"1440\" height=\"900\" />\n    </state>\n    <state x=\"518\" y=\"371\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1440.900@0.0.1440.900\" timestamp=\"1603458901250\" />\n    <state x=\"518\" y=\"361\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.23.1440.820@0.23.1440.820\" timestamp=\"1603453605743\" />\n    <state x=\"468\" y=\"170\" key=\"git4idea.branch.GitSmartOperationDialog\" timestamp=\"1603456600786\">\n      <screen x=\"0\" y=\"0\" width=\"1440\" height=\"900\" />\n    </state>\n    <state x=\"468\" y=\"170\" key=\"git4idea.branch.GitSmartOperationDialog/0.0.1440.900@0.0.1440.900\" timestamp=\"1603456600786\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision ea51523c99b25116e03dd9ca55a9397e695a4c79)
+++ .idea/workspace.xml	(date 1603908998506)
@@ -27,9 +27,7 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="e476e17d-6503-4333-9292-61f9c066748e" name="Default Changelist" comment="nichts">
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/asteroids.py" beforeDir="false" afterPath="$PROJECT_DIR$/asteroids.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -153,11 +151,12 @@
     </state>
     <state x="320" y="190" key="Vcs.Push.Dialog.v2/0.0.1440.900@0.0.1440.900" timestamp="1603901015187" />
     <state x="320" y="196" key="Vcs.Push.Dialog.v2/0.23.1440.820@0.23.1440.820" timestamp="1603453584787" />
-    <state x="518" y="371" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1603458901250">
-      <screen x="0" y="0" width="1440" height="900" />
+    <state x="518" y="364" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1603908998485">
+      <screen x="0" y="23" width="1440" height="827" />
     </state>
     <state x="518" y="371" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1440.900@0.0.1440.900" timestamp="1603458901250" />
     <state x="518" y="361" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.23.1440.820@0.23.1440.820" timestamp="1603453605743" />
+    <state x="518" y="364" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.23.1440.827@0.23.1440.827" timestamp="1603908998485" />
     <state x="468" y="170" key="git4idea.branch.GitSmartOperationDialog" timestamp="1603456600786">
       <screen x="0" y="0" width="1440" height="900" />
     </state>
